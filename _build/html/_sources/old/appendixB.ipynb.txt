{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "6d903a0e",
   "metadata": {},
   "source": [
    "#  Appendix B. Computation methods\n",
    "\n",
    "\n",
    "The HJB for $(y, n)$ component does not has a straightforward solution.\n",
    "We use **false transient method** to solve the ODEs concerning $(y,n)$ in this paper.\n",
    "\n",
    "Take a general HJB that takes into consideration smooth ambiguity and brownian misspecification. \n",
    "Here we leave out the subscription $m$ in $\\phi(y)$ as well as the upscription in $\\gamma_3$.\n",
    "\n",
    "Recall that one HJB of interest for a damage specification $\\gamma_3$ is:\n",
    "\n",
    "$$\n",
    "\\begin{aligned}\n",
    "0 = \\max_{\\tilde e} \\min_{\\omega^a_\\ell : \\sum_{\\ell=1}^L \\omega^a_\\ell = 1}  &- \\delta \\phi(y) +  \\eta \\log\\tilde e \\\\\n",
    "& + \\frac{1}{2} \\left(\\frac{d^2 \\phi}{dy^2} + \\frac{ (\\eta - 1)}{\\delta} \\left(\\gamma_2 + \\gamma_3\\mathbb{I}\\{y>\\bar y\\} \\right) \\right)(\\tilde e)^2 |\\varsigma|^2  \\\\\n",
    "& - \\frac{1}{2\\xi_b} \\left[ \\frac{d\\phi}{dy}    + \\frac{(\\eta -1)}{\\delta}(\\gamma_1 + \\gamma_2 y + \\gamma_3 (y-\\bar y)\\mathbb{I}\\{y > \\bar y\\})\\right]^2 \\cdot |\\varsigma|^2 (\\tilde e)^2 \\\\\n",
    "\\\\\n",
    "& + \\sum_{\\ell=1}^{L} \\omega_\\ell^a \\left(\\frac{d\\phi}{dy}+ \\frac{(\\eta -1)}{\\delta}(\\gamma_1 + \\gamma_2 y + \\gamma_3 (y - \\bar y)\\mathbb{I}\\{y > \\bar y\\} ) \\right)\\theta_\\ell \\tilde e   \\\\\n",
    "\\\\\n",
    "& + \\xi_a \\sum_i \\omega^a_\\ell(\\log \\omega^a_\\ell - \\log \\pi^a_\\ell)\n",
    "\\end{aligned}\n",
    "$$\n",
    "\n",
    "The problem satisfies condition to switch max and min problem.\n",
    "In the code, we first compute the optimal $\\tilde e$ and then the optimizing $\\omega_\\ell$, so we follow this order here.\n",
    "\n",
    "\n",
    "The settup includes a tolerance level,  $tolerance$, that defines *convergence* and a constant step size, $\\epsilon$, for updating the value function.\n",
    "\n",
    "We start with an initial guess of value function $\\phi_0(y)$ and initial values of $\\{ \\omega_\\ell\\}_{\\ell=1}^L$, and update the value function according to the following way:\n",
    "1. For a given $\\color{blue}{\\phi_i(y)}$, compute the optimizing $\\tilde e$ according to its first order condition:\n",
    "\n",
    "$$\n",
    "\\begin{aligned}\n",
    "0 = &\\frac{\\eta}{\\color{blue}{\\tilde e}} + \\sum_{\\ell=1}^{L} \\omega_\\ell^a \\left(\\color{blue}{\\frac{d\\phi_i}{dy}}+ \\frac{(\\eta -1)}{\\delta}(\\gamma_1 + \\gamma_2 y + \\gamma_3 (y - \\bar y)\\mathbb{I}\\{y > \\bar y\\} ) \\right)\\theta_\\ell  \\\\\n",
    " & +  \\left(\\color{blue}{\\frac{d^2 \\phi_i}{dy^2}} + \\frac{ (\\eta - 1)}{\\delta} \\left(\\gamma_2 + \\gamma_3 \\mathbb{I}\\{y>\\bar y\\} \\right)  - \\frac{1}{\\xi_b} \\left[ \\color{blue}{\\frac{d\\phi_i}{dy}} + \\frac{(\\eta -1)}{\\delta}(\\gamma_1 + \\gamma_2 y + \\gamma_3 (y-\\bar y)\\mathbb{I}\\{y > \\bar y\\})\\right]^2 \\right)|\\varsigma|^2 \\color{blue}{\\tilde e} \n",
    "\\end{aligned}\n",
    "$$\n",
    "\n",
    "2. After compute the optimizing $\\tilde e$ from above, we compute the optimizing $\\omega_\\ell$ according to its first order condition:\n",
    "\n",
    "\n",
    "$$\n",
    " \\color{blue}{\\omega_\\ell} = \\frac{\\pi_\\ell^a \\exp\\left( -\\frac{1}{\\xi_a}\\left[ \\color{blue}{\\frac{d\\phi_i}{dy}} + \\frac{(\\eta -1)}{\\delta}(\\gamma_1 + \\gamma_2 y + \\gamma_3 (y - \\bar y)\\mathbb{I}\\{y > \\bar y\\} )\\right] \\color{blue}{\\tilde e} \\cdot \\theta_\\ell \\right)}{\\sum_{\\ell=1}^L \\pi_\\ell^a \\exp\\left( -\\frac{1}{\\xi_a}\\left[ \\color{blue}{\\frac{d\\phi_i}{dy}}+ \\frac{(\\eta -1)}{\\delta}(\\gamma_1 + \\gamma_2 y + \\gamma_3 (y - \\bar y)\\mathbb{I}\\{y > \\bar y\\} )\\right]\\color{blue}{\\tilde e} \\cdot \\theta_\\ell \\right)}, \\quad \\ell = 1,2,\\dots,L\n",
    "$$\n",
    "\n",
    "3. Plug the above computed $\\tilde e$ and $\\{\\omega_\\ell\\}_{\\ell=1}^L$ back into the above HJB. Update $\\phi_i(y)$ to $\\phi_{i+1}(y)$ by solving the following ODE:\n",
    "\n",
    "    $$\n",
    "    \\begin{aligned}\n",
    "    \\frac{\\color{red}{\\phi_{i+1}(y)} - \\color{blue}{\\phi_i(y)}}{\\epsilon} =   &- \\delta \\color{red}{\\phi_{i+1}(y)} +  \\eta \\log\\color{blue}{\\tilde e} \\\\\n",
    "    & + \\frac{1}{2} \\left(\\color{red}{\\frac{d^2 \\phi_{i+1}}{dy^2}} + \\frac{ (\\eta - 1)}{\\delta} \\left(\\gamma_2 + \\gamma_3\\mathbb{I}\\{y>\\bar y\\} \\right) \\right)(\\color{blue}{\\tilde e})^2 |\\varsigma|^2  \\\\\n",
    "    & - \\frac{1}{2\\xi_b} \\left[ \\color{red}{\\frac{d\\phi_{i+1}}{dy}}    + \\frac{(\\eta -1)}{\\delta}(\\gamma_1 + \\gamma_2 y + \\gamma_3 (y-\\bar y)\\mathbb{I}\\{y > \\bar y\\})\\right]^2 \\cdot |\\varsigma|^2 (\\color{blue}{\\tilde e})^2 \\\\\n",
    "    \\\\\n",
    "    & + \\sum_{\\ell=1}^{L} \\color{blue}{\\omega_\\ell^a} \\left(\\color{red}{\\frac{d\\phi_{i+1}}{dy}} + \\frac{(\\eta -1)}{\\delta}(\\gamma_1 + \\gamma_2 y + \\gamma_3 (y - \\bar y)\\mathbb{I}\\{y > \\bar y\\} ) \\right)\\theta_\\ell \\color{blue}{\\tilde e}   \\\\\n",
    "    \\\\\n",
    "    & + \\xi_a \\sum_i \\color{blue}{\\omega^a_\\ell}(\\log\\color{blue}{\\omega^a_\\ell} - \\log \\pi^a_\\ell)\n",
    "    \\end{aligned}\n",
    "    $$\n",
    "    \n",
    "    Blued $\\color{blue}{\\tilde e}$ and $\\color{blue}{\\omega_\\ell}$ indicate they are computed using $\\color{blue}{\\phi_i(y)}$.\n",
    "\n",
    "    The method we use to solve the ODE is **biconjugate-gradient method**. \n",
    "    Use `?scipy.sparse.linalg.bicg` for document.\n",
    "    See also wiki page for [**biconjugate gradient method**](https://en.wikipedia.org/wiki/Biconjugate_gradient_method).\n",
    "\n",
    "4. Check whether the convergence condition is satisfied. \n",
    "    We call left-hand side formula *left-hand side error*.\n",
    "    Set a tolerance level, $tolerance$.  We say that the algorithm converges, if:\n",
    "    \n",
    "    $$\n",
    "    \\frac{|\\color{red}{\\phi_{i+1}(y)} - \\color{blue}{\\phi_i(y)}| }{\\epsilon} < tolerance\n",
    "    $$\n",
    "    \n",
    "    and we get the solution $\\phi(y) = \\phi_{i+1}(y)$.\n",
    "    Otherwise, assign $\\phi_{i+1}(y)$ to $\\phi_i(y)$, and repeat step 1-4."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f066807f",
   "metadata": {},
   "outputs": [],
   "source": [
    "# core loop in functions in `source/` can be described as follows\n",
    "An initial guess: ϕ\n",
    "Intial values of distorted probabibity of ω_ℓ: πc_o\n",
    "constant step size: ϵ\n",
    "tolerance level: tol\n",
    "left hand error = 1 # random value larger than tol\n",
    "report numbers of iteration: episode = 0\n",
    "while left hand side error > tol:\n",
    "    compute  dϕdy # first crder derivative\n",
    "    compute dϕdyy # second order derivative\n",
    "    compute e_tilde\n",
    "    compute optimizing ω_ℓ: πc\n",
    "    solve the ODE by conjugate gradient to get ϕ_new\n",
    "    update left hand error\n",
    "    compute right hand error\n",
    "    ϕ = ϕ_new\n",
    "    episode += 1"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "macro-ann",
   "language": "python",
   "name": "macro-ann"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.11"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
